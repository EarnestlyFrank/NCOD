#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
html_print(paste("<body><p>Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES), "</p>",
"<p>Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), "</p></body>")))
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
(paste("<body><p>Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES), "</p>",
"<p>Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), "</p></body>")))
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
HTML(paste("<body><p>Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES), "</p>",
"<p>Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), "</p></body>")))
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
tagList(paste("Pop Density: ", trunc(NPA@data$Populati_1/(NPA@data$ACRES)),
"Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1))))
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
tagList(
tags$body(paste("Pop Density: ", trunc(NPA@data$Populati_1/(NPA@data$ACRES), prec = 3),
"Adjusted Pop Density: ", trunc(NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), prec = 3)
)
)
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
tagList(
tags$body(HTML(paste("Pop Density: ", trunc(NPA@data$Populati_1/(NPA@data$ACRES), prec = 3),
"Adjusted Pop Density: ", trunc(NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), prec = 3)
)
)
))
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste("Pop Density: ", trunc(NPA@data$Populati_1/(NPA@data$ACRES), prec = 3),
"Adjusted Pop Density: ", trunc(NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), prec = 3)
)
)
)
trunc(NPA@data$Populati_1/(NPA@data$ACRES), prec = 3)
trunc(NPA@data$Populati_1/(NPA@data$ACRES), prec = 5)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste("Pop Density: ", format(round(NPA@data$Populati_1/(NPA@data$ACRES), nsmall = 2)),
"Adjusted Pop Density: ", trunc(NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), prec = 3)
)
)
)
format(round(1.20, 2), nsmall = 2)
round(1.20, 2)
round(1.20, 3)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste("Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
"Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1)
)
)
)
options(digits = 3)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste("Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
"Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1)
)
)
)
options(digits = 1)
NPA@data$Populati_1/(NPA@data$ACRES)
options(digits = 3)
NPA@data$Populati_1/(NPA@data$ACRES)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste("Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
"Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1)
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste("Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
"\nAdjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1)
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
HTML(
paste("<p>Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
"</p><p>Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), </p>
)
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
HTML(
paste("<p>Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
"</p><p>Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), "</p>"
)
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = #as.character(
HTML(
paste("<p>Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
"</p><p>Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), "</p>"
)
)
# )
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = #as.character(
HTML(
paste0("<p>Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
"</p><p>Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), "</p>"
)
)
# )
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = HTML(
as.character(
paste0("<p>Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
"</p><p>Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), "</p>"
)
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label =
as.character(
paste0("<p>Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
"</p><p>Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), "</p>"
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label =
as.character(
paste0("<p>Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
"</p><p>Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), "</p>"
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label =
paste0("<p>Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
"</p><p>Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), "</p>"
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label =
paste0("Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
"Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste0("Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
" Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1)
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste0("Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
" Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1),
"Percent Change: ",
((NPA@data$Populati_1/(NPA@data$ACRES) - NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1))/NPA@data$Populati_1/(NPA@data$ACRES))*100,
"%"
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste0(#"Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
#" Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1),
"Percent Change: ",
((NPA@data$Populati_1/(NPA@data$ACRES) - NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1))/NPA@data$Populati_1/(NPA@data$ACRES))*100,
"%"
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste0(#"Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
#" Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1),
"Percent Change: ",
((NPA@data$Populati_1/(NPA@data$ACRES) - NPA@data$Populati_1/(NPA@data$ACRES))/NPA@data$Populati_1/(NPA@data$ACRES))*100,
"%"
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste0(#"Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
#" Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1),
"Percent Change: ",
((NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1) - NPA@data$Populati_1/(NPA@data$ACRES))/NPA@data$Populati_1/(NPA@data$ACRES))*100,
"%"
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste0("Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
" Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1),
"Percent Change: ",
((NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1) - NPA@data$Populati_1/(NPA@data$ACRES))/NPA@data$Populati_1/(NPA@data$ACRES))*100,
"%"
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste0("Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES),
" Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1)
)
)
)
NPA@data$Populati_1/(NPA@data$ACRES)
signif(NPA@data$Populati_1/(NPA@data$ACRES), 4)
options(digits = 7)
signif(NPA@data$Populati_1/(NPA@data$ACRES), 4)
signif(NPA@data$Populati_1/(NPA@data$ACRES), 1)
signif(NPA@data$Populati_1/(NPA@data$ACRES), 2)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste0("Pop Density: ", signif(NPA@data$Populati_1/(NPA@data$ACRES), 2),
" Adjusted Pop Density: ", NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1)
)
)
)
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste0("Pop Density: ", signif(NPA@data$Populati_1/(NPA@data$ACRES), 3),
" Adjusted Pop Density: ", signif(NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), 3)
)
)
)
library(shiny)
library(leaflet)
ui <- fluidPage(
leafletOutput("mymap")
)
server <- function(input, output, session) {
output$mymap <- renderLeaflet({
leaflet(data = NPA, options = leafletOptions(crs = leafletCRS(proj4def = proj4string(NPA)))) %>%
#addTiles() %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.75,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
label = as.character(
paste0("Pop Density: ", signif(NPA@data$Populati_1/(NPA@data$ACRES), 3),
" Adjusted Pop Density: ", signif(NPA@data$Populati_1/(NPA@data$ACRES-NPA@data$Vacant_L_1), 3)
)
)
)
})
}
shinyApp(ui, server)
library(leaflet)
NPA <- readOGR("/Users/Frank Webb/Dropbox/TestHawaii/NPA_Shape_And_Data.shp",
layer = "NPA_Shape_And_Data", GDAL1_integer64_policy = TRUE)
shinyApp(ui = ui, server = server)
ui <- fluidPage(
leafletOutput("mymap")
)
shinyApp(ui = ui, server = server)
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii')
library(shiny)
library(leaflet)
NPA <- readOGR("/Users/Frank Webb/Dropbox/TestHawaii/NPA_Shape_And_Data.shp",
layer = "NPA_Shape_And_Data", GDAL1_integer64_policy = TRUE)
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii')
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii')
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii/app')
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii/app')
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii/app')
NPA <- readOGR("app/NPA_Shape_And_Data.shp",
layer = "NPA_Shape_And_Data", GDAL1_integer64_policy = TRUE)
NPA <- readOGR("/app/NPA_Shape_And_Data.shp",
layer = "NPA_Shape_And_Data", GDAL1_integer64_policy = TRUE)
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii/app')
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii/HackathonTest')
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii/HackathonTest')
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii/HackathonTest')
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii/HackathonTest')
NPA <- readOGR("/data/NPA_Shape_And_Data.shp",
layer = "NPA_Shape_And_Data", GDAL1_integer64_policy = TRUE)
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii/HackathonTest')
NPA <- readOGR("/Users/Frank Webb/Dropbox/TestHawaii/NPA_Shape_And_Data.shp",
layer = "NPA_Shape_And_Data", GDAL1_integer64_policy = TRUE)
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii/HackathonTest')
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii/HackathonTest')
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii/HackathonTest')
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii/HackathonTest')
runApp('C:/Users/Frank Webb/Dropbox/TestHawaii/HackathonTest')
load("~/.RData")
# install from CRAN
install.packages("rtweet")
# load rtweet
library(rtweet)
## whatever name you assigned to your created app
appname <- "LGBTHealth"
## api key (example below is not a real key)
key <- "JEZWpJaBn1Ib6m747mkWwLFbU"
## api secret (example below is not a real key)
secret <- "QE6NyTOm6aPQ5rovx7IBW3Ye0icGXH1Q6MgfieDslb8lnm5CYZ"
## create token named "twitter_token"
twitter_token <- create_token(
app = appname,
consumer_key = key,
consumer_secret = secret)
## path of home directory
home_directory <- path.expand("~")
## combine with name for token
file_name <- file.path(home_directory, "twitter_token.rds")
## save token to home directory
saveRDS(twitter_token, file = file_name)
lookup_users(users)
usr_df <- lookup_users(users)
